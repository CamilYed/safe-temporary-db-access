plugins {
    id 'application'
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "6.0.1.5171"
}

apply from: "$rootDir/dbaccess/integrationTest.gradle"

group = 'pl.pw.cyber'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

sonar {
    properties {
        property "sonar.projectKey", "CamilYed_safe-temporary-db-access"
        property "sonar.organization", "camilyed"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

project.ext.versions = [
        groovy             : '4.0.15',
        spock              : '2.4-M5-groovy-4.0',
        springBoot         : '3.2.0',
        postgres           : '42.7.1',
        nimbus_jose        : '10.1',
        lombok             : '1.18.30'
]

dependencies {

    compileOnly  "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.postgresql:postgresql'
    implementation 'org.springframework:spring-jdbc'
    implementation "com.nimbusds:nimbus-jose-jwt:${versions.nimbus_jose}"
    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.72'

    testCompileOnly  "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    testImplementation "org.apache.groovy:groovy:${versions.groovy}"
    testImplementation "org.spockframework:spock-core:${versions.spock}"

    integrationTestCompileOnly  "org.projectlombok:lombok:${versions.lombok}"
    integrationTestImplementation "org.apache.groovy:groovy:${versions.groovy}"
    integrationTestImplementation "org.spockframework:spock-core:${versions.spock}"
    integrationTestImplementation "org.spockframework:spock-spring:${versions.spock}"
    integrationTestImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

// https://github.com/gradle/gradle/issues/14889
tasks.register("prepareKotlinBuildScriptModel") {}
