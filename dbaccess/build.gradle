plugins {
    id 'application'
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "6.0.1.5171"
    id 'jacoco'
}

apply from: "$rootDir/dbaccess/integrationTest.gradle"

group = 'pl.pw.cyber'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

sonar {
    properties {
        property "sonar.projectKey", "CamilYed_safe-temporary-db-access"
        property "sonar.organization", "camilyed"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacoco/merged/jacoco.xml"
    }
}

project.ext.versions = [
        groovy             : '4.0.15',
        spock              : '2.4-M5-groovy-4.0',
        springBoot         : '3.2.0',
        postgres           : '42.7.1',
        nimbus_jose        : '10.1',
        lombok             : '1.18.30',
        fluent_validator   : '1.10.0'
]

dependencies {

    compileOnly  "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.postgresql:postgresql'
    implementation 'org.springframework:spring-jdbc'
    implementation "com.nimbusds:nimbus-jose-jwt:${versions.nimbus_jose}"
    implementation "com.github.mvallim:java-fluent-validator:${versions.fluent_validator}"

    testCompileOnly  "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    testImplementation "org.apache.groovy:groovy:${versions.groovy}"
    testImplementation "org.spockframework:spock-core:${versions.spock}"

    integrationTestCompileOnly  "org.projectlombok:lombok:${versions.lombok}"
    integrationTestImplementation "org.apache.groovy:groovy-json:${versions.groovy}"
    integrationTestImplementation "org.apache.groovy:groovy:${versions.groovy}"
    integrationTestImplementation "org.spockframework:spock-core:${versions.spock}"
    integrationTestImplementation "org.spockframework:spock-spring:${versions.spock}"
    integrationTestImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacoco/unit')
    }
}

tasks.register('jacocoIntegrationTestReport', JacocoReport) {
    dependsOn integrationTest
    executionData fileTree(layout.buildDirectory).include(
            "/jacoco/integrationTest.exec",
            "/jacoco/test.exec"
    )
    sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(sourceSets.main.output)
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacoco/integration')
    }
}

tasks.register('jacocoMergedReport', JacocoReport) {
    dependsOn test, integrationTest

    executionData fileTree(buildDir).include(
            '/jacoco/test.exec',
            '/jacoco/integrationTest.exec'
    )

    sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(sourceSets.main.output)

    reports {
        xml.required = true
        html.required = true
        xml.outputLocation = layout.buildDirectory.file('jacoco/merged/jacoco.xml')
        html.outputLocation = layout.buildDirectory.dir('jacoco/merged/html')
    }
}

// https://github.com/gradle/gradle/issues/14889
tasks.register("prepareKotlinBuildScriptModel") {}

check {
    dependsOn jacocoTestReport
    dependsOn jacocoIntegrationTestReport
    dependsOn jacocoMergedReport
}