name: Build, Test & Publish Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Prepare Testcontainers cache folder
        run: mkdir -p ~/.testcontainers

      - name: Enable Testcontainers reuse
        run: echo "testcontainers.reuse.enable=true" >> ~/.testcontainers.properties

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            gradle-

      - name: Grant execute permissions to Gradle
        run: chmod +x gradlew

      - name: Run tests and generate coverage
        run: ./gradlew clean jacocoMergedReport --build-cache

      - name: Run SonarQube analysis
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        working-directory: dbaccess
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --info

  docker-publish:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: vars
        run: |
          IMAGE_BASE="ghcr.io/${{ github.repository_owner }}/safe-temporary-db-access"
          if [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            TAGS="${IMAGE_BASE}:main,${IMAGE_BASE}:latest"
          elif [[ "${GITHUB_REF}" == refs/pull/* ]]; then
            PR_NUMBER=$(echo "${GITHUB_REF}" | sed -E 's#refs/pull/([0-9]+)/.*#\1#')
            TAGS="${IMAGE_BASE}:pr-${PR_NUMBER}"
          else
            TAGS="${IMAGE_BASE}:custom"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.vars.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
