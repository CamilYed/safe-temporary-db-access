name: Build, Test & Publish Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache Testcontainers images
        uses: actions/cache@v4
        with:
          path: ~/.testcontainers
          key: testcontainers-${{ runner.os }}
          restore-keys: |
            testcontainers-

      - name: Grant execute permissions to Gradle
        run: chmod +x gradlew

      - name: Run tests and generate coverage
        run: ./gradlew clean jacocoMergedReport

      - name: Run SonarQube analysis
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        working-directory: dbaccess
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --info

  docker-publish:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    if: startsWith(github.ref, 'refs/heads/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: vars
        run: |
          IMAGE_BASE="ghcr.io/${{ github.repository_owner }}/safe-temporary-db-access"
          TAGS="${IMAGE_BASE}:${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" = "main" ]; then
            TAGS="$TAGS,${IMAGE_BASE}:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.vars.outputs.tags }}
